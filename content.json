{"pages":[],"posts":[{"title":"初窥http（1）——浏览器中输入url后到底发生了什么","text":"&emsp;在学校里学习计算机网络的过程中，由于《计算机网络》课本内容较为底层基础，许多人在学习完这本书后都会产生一定的困惑。譬如，现在互联网有哪些地方运用到了哪些协议，这些协议最新的标准是什么样子的等等。为了解决心中的困惑，我决定先对日常中最常用的http-web中所采用的协议进行更深一步的了解，为此我在图灵社区中购置了《图解http》一书。接下来将按照自己的思路从书中获取一些问题的答案。 &emsp;本文是购置该书籍后发表的第一篇记录，在这篇记录里，我将揭秘在浏览器中输入url后发生的一系列事情。 浏览器中输入url后主要会发生下面的几件事 一 负责域名解析的DNS服务&emsp;计算机可以被赋予ip地址，同样的也可以被赋予主机名和域名。例如本博客的ip地址是185.199.109.153（github io服务器地址），域名地址为 blog.100innovate.com。我们通常使用域名去访问不同的计算机和网站，域名相比一串数字来说更有利于人们的记忆，但是计算机更擅长于处理ip地址这样的数字。 &emsp;为了解决计算机和人的矛盾，DNS服务在这个时候就产生了，通过DNS服务我们可以通过域名查询ip，或者利用ip查询域名。（通常而言，人们仅利用域名查询ip，很少利用ip查询域名） &emsp;在浏览器中输入url并键入回车后的第一步，浏览器将会向DNS服务器发送查询请求，从而获取目标服务器的ip地址。 二 互联网的基础TCP/IP协议&emsp;计算机想要相互通信，就需要一个标准的数据交换协议，这个协议就是TCP/IP协议。通常而言浏览器访问web网站时采用的是TCP协议，TCP协议是一种面向连接的、可靠的、基于字节流的传输层通信协议，为了保证通信的可靠新，首先需要进行三次握手，三次握手的主要流程为：1.客户端向服务器端发送SYN标记的数据包2.服务器端向客户端发送SYN/ACK标记的数据包3.客户端向服务器端发送ACK标记的数据包 &emsp;采用三次握手而不是两次握手有许多原因，原因之一是防止延期到达的数据包传输到服务器，服务器会因此创建一个无效的连接。 三 通过HTTP协议传输数据&emsp;HTTP协议的职责是生成针对目标Web服务器的HTTP请求报文，主要有如下的请求方法： GET:获取资源POST:传输实体主体HEAD:获取报文首部PUT:传输文件DELETE:删除文件OPTIONS:询问支持的方法TRACE:追踪路径…… &emsp;利用上述的数种请求报文向服务器发送请求报文，从而获取用户需要访问的内容。请求报文主要包含请求方法、URI、协议版本三个信息。 &emsp;在向服务器发送完请求报文后，服务器会返回请求的结果。当然每一次返回的结果并非绝对正确，为了表达服务器对用户请求的各种状态，http协议设置了规定了状态码，通过返回状态码告知浏览器服务器处理的情况，状态码通常的定义如下： 状态码 类别 含义 1XX Informational（信息性状态码） 接收的请求正在处理 2XX Success（成功状态码） 请求正常处理完毕 3XX Redirection（重定向状态码） 需要进行附加操作以完成请求 4XX Client Error（客户端错误状态码） 服务器无法处理请求 5XX Server Error（服务器错误状态码） 服务器处理请求出错 &emsp;通常来说，只要遵守上述状态码的规则，服务提供商可以自行创建状态码。 &emsp;通过上述请求协议和服务器返回报文，最终浏览器可以获得用户需要的数据和信息。 四 浏览器解析并渲染页面&emsp;在浏览器成功获取html信息后，将会按照顺序从头至尾解析html文件，在解析到外部的css、js等其他外部资源文件的时候，根据服务器、浏览器的版本不同将会直接向服务器请求资源文件，或者重新建立TCP连接，然后请求资源文件。值得一提的是，在解析html文件时，浏览器将会构建DOM树，为了加速这一过程，浏览器还会使用预解析等功能。 &emsp;在完成html的解析后，浏览器还需要根据浏览器的窗口位置等信息，逐像素的将网页绘制出来。最终我们可以获得想要看到的网页。 五 小结&emsp;通过对《图解http》进行全篇大致浏览，解决了一大问题。但是需要学习的仍然还有人多，譬如现代浏览器一些处理机制问题以及近年来我们常常使用的https与http有什么不同，这些疑惑就留到日后逐一破解。","link":"/2019/07/10/http-01/"},{"title":"后端面试基础——进程与线程","text":"&emsp;刚刚经历了大学以来的第一次面试，不得不说头条作为宇宙厂面试有非常高的难度，平日进行的简单开发和底层的深入理解不可而与，为了更加透彻的理解进程与线程，这里特别对进程和线程相关的知识进行总结。并且利用准确的术语来表述进程和线程的特点以及关系。 一 进程的基本概念&emsp;进程是并发执行的程序在执行过程中分配和管理资源的基本单位，是一个动态概念，竞争计算机系统资源的基本单位。作为一个程序执行的一个实体，是系统分配资源的基本单位。 &emsp;进程通信主要有五种通信方式，分别是管道、命名管道、信号量、消息队列、共享内存。 二 线程的基本概念&emsp;线程是进程的一个执行单元，是进程的一个特定执行路径。当一个线程修改了进程的资源，同一个进程下的其他线程将会立即看到这种变化。 &emsp;相较于进程，由于线程共享进程中的全局变量，所以通常而言不需要特别的线程通信方式，在C/C++中我们常利用volatile关键词使编译器不对代码段进行优化，无需将该值放入寄存器中，使该值可以被外部改变。或者利用windows消息队列进行线程通信。此外还可以利用std中std::promise、std::packaged_task来进行线程通信。 三 进程和线程的主要区别及优势区别：1.代码段、内存:进程间相互独立，同一进程的各线程间共享。线程仅在同一个进程内可见。 2.通信：进程间通信IPC（管道、命名管道、信号量、共享内存、消息队列），线程间通信相对进程间通信更为简单，直接使用全局变量即可。但是使用时需要考虑锁机制和同步机制。 3.调度和切换：线程上下文切换比进程上下文切换快得多。 4.在多线程OS中，进程不是一个可执行的实体。 选择：1.需要频繁创建销毁的优先使用线程；因为对进程来说创建和销毁一个进程的代价是很大的。 2.线程的切换速度快，所以在需要大量计算，切换频繁时使用线程，还有耗时的操作时用使用线程可提高应用程序的响应。 3.因为对CPU系统的效率使用上线程更占优势，所以可能要发展到多机分布的用进程，多核分布用线程。 4.并行操作时用线程，如C/S架构的服务器端并发线程响应用户的请求。 5.需要更稳定安全时，适合选择进程；需要速度时，选择线程更好。 资源引用：什么是进程？什么是线程？进程和线程之间的区别是什么？","link":"/2019/07/11/process-thread/"}],"tags":[{"name":"图解http","slug":"图解http","link":"/tags/图解http/"},{"name":"面试","slug":"面试","link":"/tags/面试/"},{"name":"操作系统","slug":"操作系统","link":"/tags/操作系统/"},{"name":"进程","slug":"进程","link":"/tags/进程/"},{"name":"线程","slug":"线程","link":"/tags/线程/"},{"name":"今日头条","slug":"今日头条","link":"/tags/今日头条/"}],"categories":[]}